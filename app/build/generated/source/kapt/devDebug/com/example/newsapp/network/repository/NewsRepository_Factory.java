// Generated by Dagger (https://dagger.dev).
package com.example.newsapp.network.repository;

import com.example.newsapp.network.api.ApiHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NewsRepository_Factory implements Factory<NewsRepository> {
  private final Provider<ApiHelper> remoteDataSourceProvider;

  public NewsRepository_Factory(Provider<ApiHelper> remoteDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
  }

  @Override
  public NewsRepository get() {
    return newInstance(remoteDataSourceProvider.get());
  }

  public static NewsRepository_Factory create(Provider<ApiHelper> remoteDataSourceProvider) {
    return new NewsRepository_Factory(remoteDataSourceProvider);
  }

  public static NewsRepository newInstance(ApiHelper remoteDataSource) {
    return new NewsRepository(remoteDataSource);
  }
}
